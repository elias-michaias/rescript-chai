// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as Zustand_ from "./bindings/Zustand_.bs.js";

function useKettle(config) {
  var match = config.init;
  var match$1 = Zustand_.useZustandRedux(config.update, match[0], match[1]);
  var dispatch = match$1[1];
  var store = match$1[0];
  var currentCmd = store(function (storeState) {
        return storeState.command;
      });
  var runFn = config.run;
  if (runFn !== undefined) {
    React.useEffect((function () {
            runFn(currentCmd, dispatch);
          }), [currentCmd]);
  }
  var subsFn = config.subs;
  if (subsFn !== undefined) {
    var currentModel = store(function (storeState) {
          return storeState.state;
        });
    React.useEffect((function () {
            var subscriptions = subsFn(currentModel);
            var cleanups = subscriptions.map(function (sub) {
                  return sub.start(dispatch);
                });
            return (function () {
                      cleanups.forEach(function (cleanup) {
                            cleanup();
                          });
                    });
          }), [currentModel]);
  }
  return [
          store,
          dispatch
        ];
}

function select(store, selector) {
  return store(function (storeState) {
              return selector(storeState.state);
            });
}

function useCup(config) {
  var useSubSelector = function (subSelector) {
    return select(config.store, (function (model) {
                  return subSelector(config.filter(model));
                }));
  };
  var cupDispatch = function (subMsg) {
    config.dispatch(config.infuse(subMsg));
  };
  return [
          useSubSelector,
          cupDispatch
        ];
}

export {
  useKettle ,
  select ,
  useCup ,
}
/* react Not a pure module */
